{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "andr_receive"
      ],
      "properties": {
        "andr_receive": {
          "$ref": "#/definitions/AndromedaMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "receive"
      ],
      "properties": {
        "receive": {
          "$ref": "#/definitions/Cw20ReceiveMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "mirror_mint_execute_msg"
      ],
      "properties": {
        "mirror_mint_execute_msg": {
          "$ref": "#/definitions/ExecuteMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "mirror_staking_execute_msg"
      ],
      "properties": {
        "mirror_staking_execute_msg": {
          "$ref": "#/definitions/ExecuteMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "mirror_gov_execute_msg"
      ],
      "properties": {
        "mirror_gov_execute_msg": {
          "$ref": "#/definitions/ExecuteMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "mirror_lock_execute_msg"
      ],
      "properties": {
        "mirror_lock_execute_msg": {
          "$ref": "#/definitions/ExecuteMsg"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "ADORecipient": {
      "description": "ADOs use a default Receive message for handling funds, this struct states that the recipient is an ADO and may attach the data field to the Receive message",
      "type": "object",
      "required": [
        "address"
      ],
      "properties": {
        "address": {
          "description": "Addr can also be a human-readable identifier used in a mission contract.",
          "allOf": [
            {
              "$ref": "#/definitions/AndrAddress"
            }
          ]
        },
        "msg": {
          "anyOf": [
            {
              "$ref": "#/definitions/Binary"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "AndrAddress": {
      "type": "object",
      "required": [
        "identifier"
      ],
      "properties": {
        "identifier": {
          "description": "Can be either an address or identifier of an ADO in a mission.",
          "type": "string"
        }
      }
    },
    "AndromedaMsg": {
      "oneOf": [
        {
          "description": "Standard Messages",
          "type": "object",
          "required": [
            "receive"
          ],
          "properties": {
            "receive": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Binary"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "update_owner"
          ],
          "properties": {
            "update_owner": {
              "type": "object",
              "required": [
                "address"
              ],
              "properties": {
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "update_operators"
          ],
          "properties": {
            "update_operators": {
              "type": "object",
              "required": [
                "operators"
              ],
              "properties": {
                "operators": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "update_mission_contract"
          ],
          "properties": {
            "update_mission_contract": {
              "type": "object",
              "required": [
                "address"
              ],
              "properties": {
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Called after `UpdateMissionContract` to ensure that all `AndrAddress` instances are valid.",
          "type": "object",
          "required": [
            "validate_andr_addresses"
          ],
          "properties": {
            "validate_andr_addresses": {
              "type": "object"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "withdraw"
          ],
          "properties": {
            "withdraw": {
              "type": "object",
              "properties": {
                "recipient": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/Recipient"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "tokens_to_withdraw": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "$ref": "#/definitions/Withdrawal"
                  }
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "register_module"
          ],
          "properties": {
            "register_module": {
              "type": "object",
              "required": [
                "module"
              ],
              "properties": {
                "module": {
                  "$ref": "#/definitions/Module"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "deregister_module"
          ],
          "properties": {
            "deregister_module": {
              "type": "object",
              "required": [
                "module_idx"
              ],
              "properties": {
                "module_idx": {
                  "$ref": "#/definitions/Uint64"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "alter_module"
          ],
          "properties": {
            "alter_module": {
              "type": "object",
              "required": [
                "module",
                "module_idx"
              ],
              "properties": {
                "module": {
                  "$ref": "#/definitions/Module"
                },
                "module_idx": {
                  "$ref": "#/definitions/Uint64"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "refresh_address"
          ],
          "properties": {
            "refresh_address": {
              "type": "object",
              "required": [
                "contract"
              ],
              "properties": {
                "contract": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "refresh_addresses"
          ],
          "properties": {
            "refresh_addresses": {
              "type": "object",
              "properties": {
                "limit": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "uint32",
                  "minimum": 0.0
                },
                "start_after": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Asset": {
      "type": "object",
      "required": [
        "amount",
        "info"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "info": {
          "$ref": "#/definitions/AssetInfo"
        }
      }
    },
    "AssetInfo": {
      "description": "AssetInfo contract_addr is usually passed from the cw20 hook so we can trust the contract_addr is properly validated.",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
            "token": {
              "type": "object",
              "required": [
                "contract_addr"
              ],
              "properties": {
                "contract_addr": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "native_token"
          ],
          "properties": {
            "native_token": {
              "type": "object",
              "required": [
                "denom"
              ],
              "properties": {
                "denom": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "Cw20ReceiveMsg": {
      "description": "Cw20ReceiveMsg should be de/serialized under `Receive()` variant in a ExecuteMsg",
      "type": "object",
      "required": [
        "amount",
        "msg",
        "sender"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "msg": {
          "$ref": "#/definitions/Binary"
        },
        "sender": {
          "type": "string"
        }
      }
    },
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "ExecuteMsg": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "receive"
          ],
          "properties": {
            "receive": {
              "$ref": "#/definitions/Cw20ReceiveMsg"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Owner Operations Update config; only owner is allowed to execute it",
          "type": "object",
          "required": [
            "update_config"
          ],
          "properties": {
            "update_config": {
              "type": "object",
              "properties": {
                "collateral_oracle": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "collector": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "lock": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "oracle": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "owner": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "protocol_fee_rate": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/Decimal"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "staking": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "terraswap_factory": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "token_code_id": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "uint64",
                  "minimum": 0.0
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Update asset related parameters",
          "type": "object",
          "required": [
            "update_asset"
          ],
          "properties": {
            "update_asset": {
              "type": "object",
              "required": [
                "asset_token"
              ],
              "properties": {
                "asset_token": {
                  "type": "string"
                },
                "auction_discount": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/Decimal"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "ipo_params": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/IPOParams"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "min_collateral_ratio": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/Decimal"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Generate asset token initialize msg and register required infos except token address",
          "type": "object",
          "required": [
            "register_asset"
          ],
          "properties": {
            "register_asset": {
              "type": "object",
              "required": [
                "asset_token",
                "auction_discount",
                "min_collateral_ratio"
              ],
              "properties": {
                "asset_token": {
                  "type": "string"
                },
                "auction_discount": {
                  "$ref": "#/definitions/Decimal"
                },
                "ipo_params": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/IPOParams"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "min_collateral_ratio": {
                  "$ref": "#/definitions/Decimal"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "register_migration"
          ],
          "properties": {
            "register_migration": {
              "type": "object",
              "required": [
                "asset_token",
                "end_price"
              ],
              "properties": {
                "asset_token": {
                  "type": "string"
                },
                "end_price": {
                  "$ref": "#/definitions/Decimal"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Asset feeder is allowed to trigger IPO event on preIPO assets",
          "type": "object",
          "required": [
            "trigger_i_p_o"
          ],
          "properties": {
            "trigger_i_p_o": {
              "type": "object",
              "required": [
                "asset_token"
              ],
              "properties": {
                "asset_token": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "User Operations",
          "type": "object",
          "required": [
            "open_position"
          ],
          "properties": {
            "open_position": {
              "type": "object",
              "required": [
                "asset_info",
                "collateral",
                "collateral_ratio"
              ],
              "properties": {
                "asset_info": {
                  "$ref": "#/definitions/AssetInfo"
                },
                "collateral": {
                  "$ref": "#/definitions/Asset"
                },
                "collateral_ratio": {
                  "$ref": "#/definitions/Decimal"
                },
                "short_params": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/ShortParams"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Deposit more collateral",
          "type": "object",
          "required": [
            "deposit"
          ],
          "properties": {
            "deposit": {
              "type": "object",
              "required": [
                "collateral",
                "position_idx"
              ],
              "properties": {
                "collateral": {
                  "$ref": "#/definitions/Asset"
                },
                "position_idx": {
                  "$ref": "#/definitions/Uint128"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Withdraw collateral",
          "type": "object",
          "required": [
            "withdraw"
          ],
          "properties": {
            "withdraw": {
              "type": "object",
              "required": [
                "position_idx"
              ],
              "properties": {
                "collateral": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/Asset"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "position_idx": {
                  "$ref": "#/definitions/Uint128"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Convert all deposit collateral to asset",
          "type": "object",
          "required": [
            "mint"
          ],
          "properties": {
            "mint": {
              "type": "object",
              "required": [
                "asset",
                "position_idx"
              ],
              "properties": {
                "asset": {
                  "$ref": "#/definitions/Asset"
                },
                "position_idx": {
                  "$ref": "#/definitions/Uint128"
                },
                "short_params": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/ShortParams"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "IPOParams": {
      "type": "object",
      "required": [
        "min_collateral_ratio_after_ipo",
        "mint_end",
        "pre_ipo_price"
      ],
      "properties": {
        "min_collateral_ratio_after_ipo": {
          "$ref": "#/definitions/Decimal"
        },
        "mint_end": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "pre_ipo_price": {
          "$ref": "#/definitions/Decimal"
        }
      }
    },
    "Module": {
      "description": "Modules can be instantiated in two different ways New - Provide an instantiation message for the contract, a new contract will be instantiated and the address recorded Address - Provide an address for an already instantiated module contract A struct describing a token module, provided with the instantiation message this struct is used to record the info about the module and how/if it should be instantiated",
      "type": "object",
      "required": [
        "address",
        "is_mutable",
        "module_type"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/AndrAddress"
        },
        "is_mutable": {
          "type": "boolean"
        },
        "module_type": {
          "type": "string"
        }
      }
    },
    "Recipient": {
      "oneOf": [
        {
          "description": "An address that is not another ADO. It is assumed that it is a valid address.",
          "type": "object",
          "required": [
            "addr"
          ],
          "properties": {
            "addr": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "a_d_o"
          ],
          "properties": {
            "a_d_o": {
              "$ref": "#/definitions/ADORecipient"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "ShortParams": {
      "type": "object",
      "properties": {
        "belief_price": {
          "anyOf": [
            {
              "$ref": "#/definitions/Decimal"
            },
            {
              "type": "null"
            }
          ]
        },
        "max_spread": {
          "anyOf": [
            {
              "$ref": "#/definitions/Decimal"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "Uint64": {
      "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
      "type": "string"
    },
    "Withdrawal": {
      "type": "object",
      "required": [
        "token"
      ],
      "properties": {
        "token": {
          "type": "string"
        },
        "withdrawal_type": {
          "anyOf": [
            {
              "$ref": "#/definitions/WithdrawalType"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "WithdrawalType": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "amount"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "percentage"
          ],
          "properties": {
            "percentage": {
              "$ref": "#/definitions/Decimal"
            }
          },
          "additionalProperties": false
        }
      ]
    }
  }
}
